{"ast":null,"code":"import { GLOBAL_TYPES } from \"./globalType\";\nimport { postDataAPI } from \"../../utils/serverAPI\";\nexport const login = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {}\n    });\n    const res = await postDataAPI('login', data);\n    dispatch({\n      type: GLOBAL_TYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstToken\", true);\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        error: error.response.data.msg\n      }\n    });\n  }\n};\nexport const register = data => async dispatch => {\n  try {\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {}\n    });\n    const res = await postDataAPI(\"register\", data);\n    dispatch({\n      type: GLOBAL_TYPES.AUTH,\n      payload: {\n        token: res.data.access_token,\n        user: res.data.user\n      }\n    });\n    localStorage.setItem(\"firstToken\", true);\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        success: res.data.msg\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        error: error.response.data.msg\n      }\n    });\n  }\n};\nexport const logout = () => async dispatch => {\n  try {\n    localStorage.removeItem(\"firstToken\");\n    await postDataAPI(\"logout\");\n    window.location.href = '/';\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        success: \"Success logout\"\n      }\n    });\n  } catch (error) {\n    dispatch({\n      type: GLOBAL_TYPES.ALERT,\n      payload: {\n        error: error.response.data.msg\n      }\n    });\n  }\n};\nexport const refresh_token = () => async dispatch => {\n  const firstToken = localStorage.getItem(\"firstToken\");\n  if (firstToken) {\n    try {\n      dispatch({\n        type: GLOBAL_TYPES.ALERT,\n        payload: {\n          loading: true\n        }\n      });\n      const res = await postDataAPI(\"refresh_token\");\n      dispatch({\n        type: GLOBAL_TYPES.AUTH,\n        payload: {\n          token: res.data.access_token,\n          user: res.data.user\n        }\n      });\n      dispatch({\n        type: GLOBAL_TYPES.ALERT,\n        payload: {}\n      });\n    } catch (error) {\n      dispatch({\n        type: GLOBAL_TYPES.ALERT,\n        payload: {\n          error: error.response.data.msg\n        }\n      });\n    }\n  }\n};","map":{"version":3,"names":["GLOBAL_TYPES","postDataAPI","login","data","dispatch","type","ALERT","payload","res","AUTH","token","access_token","user","localStorage","setItem","success","msg","error","response","register","logout","removeItem","window","location","href","refresh_token","firstToken","getItem","loading"],"sources":["/home/anvar/Desktop/mohirfest/client/src/redux/actions/authAction.js"],"sourcesContent":["import { GLOBAL_TYPES } from \"./globalType\";\nimport { postDataAPI } from \"../../utils/serverAPI\";\n\nexport const login = (data) => async (dispatch) => {\n    try {\n        dispatch({ type: GLOBAL_TYPES.ALERT, payload: {} })\n        const res = await postDataAPI('login', data)\n        dispatch({\n            type: GLOBAL_TYPES.AUTH,\n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            }\n        })\n\n        localStorage.setItem(\"firstToken\", true)\n\n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                success: res.data.msg\n            }\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                error: error.response.data.msg\n            }\n        })\n    }\n}\n\nexport const register = (data) => async (dispatch) => {\n    try {\n        dispatch({type: GLOBAL_TYPES.ALERT, payload: {}})\n        const res = await postDataAPI(\"register\", data)\n        dispatch({\n            type: GLOBAL_TYPES.AUTH,\n            payload: {\n                token: res.data.access_token,\n                user: res.data.user\n            }\n        })\n\n        localStorage.setItem(\"firstToken\", true)\n        \n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                success: res.data.msg\n            }\n        })\n\n    } catch (error) {\n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                error: error.response.data.msg\n            }\n        })\n    }\n}\n\nexport const logout = () => async (dispatch) => {\n    try {\n        localStorage.removeItem(\"firstToken\")\n        await postDataAPI(\"logout\")\n        window.location.href = '/'\n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                success: \"Success logout\"\n            }\n        })\n    } catch (error) {\n        dispatch({\n            type: GLOBAL_TYPES.ALERT,\n            payload: {\n                error: error.response.data.msg\n            }\n        })\n    }\n}\n\nexport const refresh_token = () => async (dispatch) => {\n    const firstToken = localStorage.getItem(\"firstToken\")\n    if (firstToken) {\n        try {\n            dispatch({type: GLOBAL_TYPES.ALERT, payload: {loading: true}})\n            const res = await postDataAPI(\"refresh_token\");\n            dispatch({\n                type: GLOBAL_TYPES.AUTH,\n                payload: {\n                    token: res.data.access_token,\n                    user: res.data.user\n                }\n            })\n            dispatch({type: GLOBAL_TYPES.ALERT, payload: {}})\n        } catch (error) {\n            dispatch({ type: GLOBAL_TYPES.ALERT, payload: { error: error.response.data.msg } })\n        }\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}